#include <LPC214x.h>

/* Function Prototypes */
void uart_init(void);
void uart_tx(unsigned char c);
void uart_tx_data(unsigned char data);
void delay(unsigned int t);
void i2c0_init(void);
void i2c_start(void);
void i2c_stop(void);
void i2c_write(unsigned char data);
unsigned char i2c_read(void);
void i2c_send_addr(unsigned char addr);

/* Main Function */
int main(void)
{
    unsigned char data;
    PINSEL0 = 0x00000055;  // Enable UART0 and I2C0 pins

    uart_init();
    i2c0_init();

    uart_tx('B');  // UART Test Point

    // Write 0x13 to EEPROM address 0x0000
    i2c_start();
    i2c_send_addr(0xA0);  // EEPROM write address
    i2c_write(0x00);      // Address High Byte
    i2c_write(0x00);      // Address Low Byte
    i2c_write(0x13);      // Data
    i2c_stop();
    delay(30000);

    // Set EEPROM read address
    i2c_start();
    i2c_send_addr(0xA0);
    i2c_write(0x00);
    i2c_write(0x00);
    i2c_stop();
    delay(30000);

    // Read data from EEPROM
    i2c_start();
    i2c_send_addr(0xA1);  // EEPROM read address
    data = i2c_read();
    i2c_stop();

    uart_tx_data(data);  // Send to UART
    while(1);
}

/* UART Functions */
void uart_init(void)
{
    U0LCR = 0x83;
    U0DLL = 97;  // For 9600 baud rate @ 15MHz
    U0DLM = 0x00;
    U0LCR = 0x03;
}

void uart_tx(unsigned char c)
{
    while (!(U0LSR & 0x20));
    U0THR = c;
}

void uart_tx_data(unsigned char data)
{
    uart_tx((data >> 4) + '0');
    uart_tx((data & 0x0F) + '0');
}

/* Delay Function */
void delay(unsigned int t)
{
    while (t--);
}

/* I2C Functions */
void i2c0_init(void)
{
    I2C0SCLL = 75;
    I2C0SCLH = 75;
    I2C0CONSET = 0x40;  // Enable I2C
}

void i2c_start(void)
{
    I2C0CONSET = 0x20;  // STA = 1
    while (!(I2C0CONSET & 0x08));
    I2C0CONCLR = 0x28;  // Clear STA and SI
}

void i2c_stop(void)
{
    I2C0CONSET = 0x10;  // STO = 1
    I2C0CONCLR = 0x08;  // Clear SI
    delay(10000);
}

void i2c_send_addr(unsigned char addr)
{
    I2C0DAT = addr;
    I2C0CONCLR = 0x08;  // Clear SI
    while (!(I2C0CONSET & 0x08));
}

void i2c_write(unsigned char data)
{
    I2C0DAT = data;
    I2C0CONCLR = 0x08;
    while (!(I2C0CONSET & 0x08));
}

unsigned char i2c_read(void)
{
    I2C0CONCLR = 0x04;  // Clear AA for NACK
    I2C0CONCLR = 0x08;  // Clear SI
    while (!(I2C0CONSET & 0x08));
    return I2C0DAT;
}





…………………………………………………………………………………………………..
#include <LPC214x.h>

#define EEPROM 0xA0

void I2C_Init() {
    PINSEL0 |= 0x50;
    I2C0SCLH = I2C0SCLL = 75;
    I2C0CONSET = 0x40;
}

void I2C_Cmd(unsigned char data) {
    I2C0DAT = data;
    I2C0CONCLR = 0x28;
    while (!(I2C0CONSET & 0x08));
}

unsigned char I2C_Read() {
    I2C0CONCLR = 0x2C;
    while (!(I2C0CONSET & 0x08));
    return I2C0DAT;
}

void EEPROM_Write(unsigned char addr, unsigned char dat) {
    volatile int i;  // <<< Moved declaration here
    I2C0CONSET = 0x20;
    while (!(I2C0CONSET & 0x08));
    I2C_Cmd(EEPROM);
    I2C_Cmd(addr);
    I2C_Cmd(dat);
    I2C0CONSET = 0x10;
    I2C0CONCLR = 0x08;
    for (i = 0; i < 30000; i++);  // <<< Now correct
}

unsigned char EEPROM_Read(unsigned char addr) {
    unsigned char temp;
    I2C0CONSET = 0x20;
    while (!(I2C0CONSET & 0x08));
    I2C_Cmd(EEPROM);
    I2C_Cmd(addr);
    I2C0CONSET = 0x20;
    while (!(I2C0CONSET & 0x08));
    I2C_Cmd(EEPROM | 1);
    temp = I2C_Read();
    I2C0CONSET = 0x10;
    I2C0CONCLR = 0x08;
    return temp;
}

int main() {
    unsigned char x;
    I2C_Init();
    EEPROM_Write(0x10, 0x55);
    x = EEPROM_Read(0x10);
    while (1);
}
